{"ts":1356856530172,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356856564924,"patch":[[{"diffs":[[1,"/**\n * Author: Brian Stoner, http://brianstoner.com/\n * Modified version of TJ's http support file from the Express repo:\n * https://github.com/visionmedia/express/blob/master/test/support/http.js\n *\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , should = require('should')\n  , methods = ['get','post','put','delete','head']\n  , http = require('http')\n  \n  , server\n  , addr;\n\nexports.createServer = function(app,fn){\n  if(server){ return fn(); }\n\n  server = app;\n  server.listen(0, function(){\n    addr = server.address();\n    fn();\n  });\n\n}\n\nexports.request = function() {\n  return new Request();\n}\n\nfunction Request() {\n  var self = this;\n  this.data = [];\n  this.header = {};\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nRequest.prototype.__proto__ = EventEmitter.prototype;\n\nmethods.forEach(function(method){\n  Request.prototype[method] = function(path){\n    return this.request(method, path);\n  };\n});\n\nRequest.prototype.set = function(field, val){\n  this.header[field] = val;\n  return this;\n};\n\nRequest.prototype.write = function(data){\n  this.data.push(data);\n  return this;\n};\n\nRequest.prototype.request = function(method, path){\n  this.method = method;\n  this.path = path;\n  return this;\n};\n\nRequest.prototype.expect = function(body, fn){\n  this.end(function(res){\n    if ('number' == typeof body) {\n      res.statusCode.should.equal(body);\n    } else if (body instanceof RegExp) {\n      res.body.should.match(body);\n    } else {\n      res.body.should.equal(body);\n    }\n    fn();\n  });\n};\n\nRequest.prototype.end = function(fn){\n\n  var req = http.request({\n      method: this.method\n    , port: addr.port\n    , host: addr.address\n    , path: this.path\n    , headers: this.header\n  });\n\n  this.data.forEach(function(chunk){\n    req.write(chunk);\n  });\n  \n  req.on('response', function(res){\n    var buf = '';\n    res.setEncoding('utf8');\n    res.on('data', function(chunk){ buf += chunk });\n    res.on('end', function(){\n      res.body = buf;\n      fn(res);\n    });\n  });\n\n  req.end();\n\n  return this;\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":2059}]],"length":2059,"saved":false}
{"ts":1356856572292,"patch":[[{"diffs":[[0,"oner.com"],[-1,"/"],[0,"\n * Modi"]],"start1":43,"start2":43,"length1":17,"length2":16}]],"length":2058,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356856920173,"patch":[[{"diffs":[[0,"ion(app,"],[1," port, address, ,"],[0,"fn){\n  i"]],"start1":440,"start2":440,"length1":16,"length2":33},{"diffs":[[0,"r = "],[-1,"server."],[0,"address"],[-1,"()"],[0,";\n  "]],"start1":554,"start2":554,"length1":24,"length2":15}]],"length":2066,"saved":false}
{"ts":1356856922579,"patch":[[{"diffs":[[0,"ddress, "],[-1,","],[0,"fn){\n  i"]],"start1":456,"start2":456,"length1":17,"length2":16}]],"length":2065,"saved":false}
{"ts":1356857060456,"patch":[[{"diffs":[[0,"ress"],[-1,", fn){\n  if(server){ return fn(); }\n"],[1,"){"],[0,"\n  s"]],"start1":458,"start2":458,"length1":44,"length2":10}]],"length":2031,"saved":false}
{"ts":1356857075898,"patch":[[{"diffs":[[0,"ddress;\n"],[-1,"    fn();\n"],[0,"  });\n\n}"]],"start1":524,"start2":524,"length1":26,"length2":16}]],"length":2021,"saved":false}
{"ts":1356857092345,"patch":[[{"diffs":[[0,"/**\n"],[-1," * Author: Brian Stoner, http://brianstoner.com\n"],[0," * M"]],"start1":0,"start2":0,"length1":56,"length2":8}]],"length":1973,"saved":false}
